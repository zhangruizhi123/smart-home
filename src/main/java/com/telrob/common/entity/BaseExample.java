package com.telrob.common.entity;

import java.util.ArrayList;
import java.util.List;

public class BaseExample {
	
	/**
	 * 表名
	 */
	private String tableName;
	
	/**
	 * 列名
	 */
	private String column;
	
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table dev_info_detail
	 * @mbg.generated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table dev_info_detail
	 * @mbg.generated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table dev_info_detail
	 * @mbg.generated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table dev_info_detail
	 * @mbg.generated
	 */
	public BaseExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table dev_info_detail
	 * @mbg.generated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table dev_info_detail
	 * @mbg.generated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table dev_info_detail
	 * @mbg.generated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table dev_info_detail
	 * @mbg.generated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table dev_info_detail
	 * @mbg.generated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table dev_info_detail
	 * @mbg.generated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table dev_info_detail
	 * @mbg.generated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table dev_info_detail
	 * @mbg.generated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table dev_info_detail
	 * @mbg.generated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table dev_info_detail
	 * @mbg.generated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table dev_info_detail
	 * @mbg.generated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andItemIsNull(String column) {
			addCriterion(column+" is null");
			return (Criteria) this;
		}

		public Criteria andItemIsNotNull(String column) {
			addCriterion(column+" is not null");
			return (Criteria) this;
		}

		public Criteria andItemEqualTo(String column,Object value) {
			addCriterion(column+" =", value, column);
			return (Criteria) this;
		}

		public Criteria andItemNotEqualTo(String column,Object value) {
			addCriterion(column+" <>", value, column);
			return (Criteria) this;
		}

		public Criteria andItemGreaterThan(String column,Object value) {
			addCriterion(column+" >", value, column);
			return (Criteria) this;
		}

		public Criteria andItemGreaterThanOrEqualTo(String column,Object value) {
			addCriterion(column+" >=", value,column);
			return (Criteria) this;
		}

		public Criteria andItemLessThan(String column,Object value) {
			addCriterion(column+" <", value, column);
			return (Criteria) this;
		}

		public Criteria andItemLessThanOrEqualTo(String column,Object value) {
			addCriterion(column+" <=", value, column);
			return (Criteria) this;
		}

		public Criteria andItemLike(String column,Object value) {
			addCriterion(column+" like", value, column);
			return (Criteria) this;
		}

		public Criteria andItemNotLike(String column,Object value) {
			addCriterion(column+" not like", value,column);
			return (Criteria) this;
		}

		public Criteria andItemIn(String column,List<?> values) {
			addCriterion(column+" in", values, column);
			return (Criteria) this;
		}

		public Criteria andItemNotIn(String column,List<?> values) {
			addCriterion(column+" not in", values, column);
			return (Criteria) this;
		}

		public Criteria andItemBetween(String column,Object value1, Object value2) {
			addCriterion(column+" between", value1, value2, column);
			return (Criteria) this;
		}

		public Criteria andItemNotBetween(String column,Object value1, Object value2) {
			addCriterion(column+" not between", value1, value2, column);
			return (Criteria) this;
		}
		
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table dev_info_detail
	 * @mbg.generated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dev_info_detail
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
    
	public String getTableName() {
		if("".equals(tableName)) {
			return null;
		}
		return tableName;
	}

	public void setTableName(String tableName) {
		this.tableName = tableName;
	}

	public String getColumn() {
		if("".equals(column)) {
			return null;
		}
		return column;
	}

	public void setColumn(String column) {
		this.column = column;
	}
	
	public static void main(String[] args) {
		String name="user_name";
	}
}